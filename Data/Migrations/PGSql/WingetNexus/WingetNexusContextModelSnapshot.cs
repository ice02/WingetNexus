// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WingetNexus.Data;

#nullable disable

namespace WingetNexus.Data.Migrations.PGSql.WingetNexus
{
    [DbContext(typeof(WingetNexusContext))]
    partial class WingetNexusContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("WingetNexus.Shared.Models.Db.Installer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Architecture")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("InstallerPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InstallerSha256")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InstallerType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsLocalPackage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NestedInstallerType")
                        .HasColumnType("TEXT");

                    b.Property<int>("PackageVersionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductCode")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Scope")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpgradeBehavior")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PackageVersionId");

                    b.ToTable("Installers");
                });

            modelBuilder.Entity("WingetNexus.Shared.Models.Db.InstallerSwitch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("InstallerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Parameter")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InstallerId");

                    b.ToTable("InstallerSwitches");
                });

            modelBuilder.Entity("WingetNexus.Shared.Models.Db.Locale", b =>
                {
                    b.Property<string>("PackageLocale")
                        .HasColumnType("TEXT");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<string>("Copyright")
                        .HasColumnType("TEXT");

                    b.Property<string>("CopyrightUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("License")
                        .HasColumnType("TEXT");

                    b.Property<string>("LicenseUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("PackageName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PackageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("PrivacyUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Publisher")
                        .HasColumnType("TEXT");

                    b.Property<string>("PublisherSupportUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("PublisherUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("PurchaseUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReleaseNotes")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReleaseNotesUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("TEXT");

                    b.HasKey("PackageLocale");

                    b.ToTable("Locales");
                });

            modelBuilder.Entity("WingetNexus.Shared.Models.Db.Objects.NestedInstallerFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("InstallerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PortableCommandAlias")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RelativeFilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InstallerId");

                    b.ToTable("NestedInstallerFiles");
                });

            modelBuilder.Entity("WingetNexus.Shared.Models.Db.Objects.PackageDependency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("InstallerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MinimumVersion")
                        .HasColumnType("TEXT");

                    b.Property<int>("PackageId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("InstallerId");

                    b.HasIndex("PackageId");

                    b.ToTable("PackageDependencies");
                });

            modelBuilder.Entity("WingetNexus.Shared.Models.Db.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("TEXT");

                    b.Property<int>("DownloadCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Identifier")
                        .IsUnique();

                    b.HasIndex("Name");

                    b.HasIndex("Publisher");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("WingetNexus.Shared.Models.Db.PackageVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Channel")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("TEXT");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PackageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PackageLocale")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VersionCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PackageLocale");

                    b.HasIndex("PackageId", "VersionCode")
                        .IsUnique();

                    b.ToTable("PackageVersions");
                });

            modelBuilder.Entity("WingetNexus.Shared.Models.Db.Installer", b =>
                {
                    b.HasOne("WingetNexus.Shared.Models.Db.PackageVersion", "Version")
                        .WithMany("Installers")
                        .HasForeignKey("PackageVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Version");
                });

            modelBuilder.Entity("WingetNexus.Shared.Models.Db.InstallerSwitch", b =>
                {
                    b.HasOne("WingetNexus.Shared.Models.Db.Installer", "Installer")
                        .WithMany("Switches")
                        .HasForeignKey("InstallerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Installer");
                });

            modelBuilder.Entity("WingetNexus.Shared.Models.Db.Objects.NestedInstallerFile", b =>
                {
                    b.HasOne("WingetNexus.Shared.Models.Db.Installer", "Installer")
                        .WithMany("NestedInstallerFiles")
                        .HasForeignKey("InstallerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Installer");
                });

            modelBuilder.Entity("WingetNexus.Shared.Models.Db.Objects.PackageDependency", b =>
                {
                    b.HasOne("WingetNexus.Shared.Models.Db.Installer", null)
                        .WithMany("PackageDependencies")
                        .HasForeignKey("InstallerId");

                    b.HasOne("WingetNexus.Shared.Models.Db.Package", "Package")
                        .WithMany()
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Package");
                });

            modelBuilder.Entity("WingetNexus.Shared.Models.Db.PackageVersion", b =>
                {
                    b.HasOne("WingetNexus.Shared.Models.Db.Package", "Package")
                        .WithMany("Versions")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WingetNexus.Shared.Models.Db.Locale", "DefaultLocale")
                        .WithMany()
                        .HasForeignKey("PackageLocale")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DefaultLocale");

                    b.Navigation("Package");
                });

            modelBuilder.Entity("WingetNexus.Shared.Models.Db.Installer", b =>
                {
                    b.Navigation("NestedInstallerFiles");

                    b.Navigation("PackageDependencies");

                    b.Navigation("Switches");
                });

            modelBuilder.Entity("WingetNexus.Shared.Models.Db.Package", b =>
                {
                    b.Navigation("Versions");
                });

            modelBuilder.Entity("WingetNexus.Shared.Models.Db.PackageVersion", b =>
                {
                    b.Navigation("Installers");
                });
#pragma warning restore 612, 618
        }
    }
}
